{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACO;AACP,+BAA+B,uBAAuB,WAAW;AACjE;AACA;AACO;AACP;AACA;AACA,KAAK;AACL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,sCAAsC,OAAO,qBAAqB,KAAK;AACvE;AACA;AACA;AACA,iCAAiC,mCAAmC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,gBAAgB;AACtF,0DAA0D,gBAAgB;AAC1E,qEAAqE,gBAAgB;AACrF,+EAA+E,gBAAgB;AAC/F,2DAA2D;AAC3D,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D,yBAAyB;AACzB;AACA,qBAAqB;AACrB;AACA,+DAA+D,gBAAgB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;;;;;;;UC3IA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;ACNuH;AACvH;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,yDAAW;AACnB,4BAA4B,mCAAmC;AAC/D;AACA;AACA;AACA;AACA,gBAAgB,yDAAW;AAC3B;AACA;AACA;AACA,gBAAgB,yDAAW;AAC3B,sDAAsD,2CAA2C;AACjG;AACA,wBAAwB,4DAAc;AACtC,4BAA4B,yDAAW;AACvC,4BAA4B,yDAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,4BAA4B,yDAAW;AACvC,4BAA4B,yDAAW;AACvC,yFAAyF,cAAc;AACvG,yBAAyB;AACzB;AACA;AACA,wBAAwB,yDAAW;AACnC,wBAAwB,yDAAW;AACnC;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,QAAQ,uDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,yDAAW;AACnB,QAAQ,yDAAW;AACnB;AACA;AACA,QAAQ,yDAAW;AACnB,QAAQ,yDAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yBAAyB,EAAE,WAAW;AAChF;AACA;AACA;AACA,SAAS;AACT;AACA,+DAA+D,gBAAgB;AAC/E;AACA;AACA;AACA;AACA,uBAAuB,kEAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack:///./src/utils/utils.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./src/pages/popup.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// Utility function to save the API key to Chrome storage\nexport function saveApiKey(apiKey) {\n    chrome.storage.local.set({ chatgptApiKey: apiKey }, () => { });\n}\n// Utility function to get the API key from Chrome storage\nexport function getApiKey(callback) {\n    chrome.storage.local.get(['chatgptApiKey'], (result) => {\n        callback(result.chatgptApiKey || null);\n    });\n}\n// Utility function to hide an element by selector\nexport function hideElement(selector) {\n    const element = document.querySelector(selector);\n    if (element) {\n        element.classList.add('hidden');\n    }\n}\n// Utility function to show an element by selector\nexport function showElement(selector) {\n    const element = document.querySelector(selector);\n    if (element) {\n        element.classList.remove('hidden');\n    }\n}\n// Utility function to get the domain name from a URL\nexport function getDomainNameFromUrl(url) {\n    const parts = url.hostname.split('.');\n    if (parts.length > 2) {\n        if (parts[parts.length - 2] === 'co' || parts[parts.length - 2] === 'com') {\n            return parts[parts.length - 3];\n        }\n        else {\n            return parts[parts.length - 2];\n        }\n    }\n    else if (parts.length === 2) {\n        return parts[0];\n    }\n    else {\n        return url.hostname;\n    }\n}\nexport function analyseWithLLM(html) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            getApiKey((apiKey) => __awaiter(this, void 0, void 0, function* () {\n                if (!apiKey) {\n                    reject(new Error('API key is not set. Please enter your API key.'));\n                    return;\n                }\n                const prompt = `You are a news article classifier assessing whether a news article is fake news or not.\n\n                            You should evaluate each news article on three content features:\n                            Use and presence of emotions: Greater use of emotive and affective language. Especially negative emotions typically more present. In news, content contains heavy emotional appeal to readers, provoking fear, anger, outrage.\n                            Ideological bias: (Hyper-)partisan bias, often with a right-leaning ideological orientation. Negative references to left-leaning, progressive political actors or issues, positive references to (populist) right leaning political actors or issues\n                            Informal words and language: More use of informal words and informal language (slang, swear). Higher likelihood of hate speech and incivility.\n                            Facts go against scientific consensus: evidence and claims made go against conventional facts or scientific consensus.\n                            Misuse of experts: Irrelevant or non-legitimate experts are cited who have no knowledge of the topic.\n\n                            Give an assessment for each feature expressing to which extent a feature applies, use the following labels:\n                            - not present\n                            - Somewhat present\n                            - Strongly present\n                            return the results as a pure JSON object without any additional text or explanation. The JSON object should have the following structure:\n                            {\n                              \"Use and presence of emotions\": \"label\",\n                              \"Ideological bias\": \"label\",\n                              \"Informal words and language\": \"label\",\n                              \"Facts go against scientific consensus\": \"label\",\n                              \"Misuse of experts\": \"label\"\n                            }`;\n                const fullPrompt = `${prompt}\\n\\nHTML Content:\\n${html}`;\n                const openaiEndpoint = 'https://api.openai.com/v1/chat/completions';\n                const requestBody = {\n                    model: 'gpt-4o-mini',\n                    messages: [{ role: 'user', content: fullPrompt }],\n                    top_p: 0.2,\n                    seed: 1,\n                    response_format: {\n                        type: 'json_schema',\n                        json_schema: {\n                            name: 'news_article_analysis',\n                            schema: {\n                                type: 'object',\n                                properties: {\n                                    \"Use and presence of emotions\": { type: 'string' },\n                                    \"Ideological bias\": { type: 'string' },\n                                    \"Informal words and language\": { type: 'string' },\n                                    \"Facts go against scientific consensus\": { type: 'string' },\n                                    \"Misuse of experts\": { type: 'string' }\n                                },\n                                required: [\n                                    \"Use and presence of emotions\",\n                                    \"Ideological bias\",\n                                    \"Informal words and language\",\n                                    \"Facts go against scientific consensus\",\n                                    \"Misuse of experts\"\n                                ],\n                                additionalProperties: false\n                            },\n                            strict: true\n                        }\n                    }\n                };\n                try {\n                    const response = yield fetch(openaiEndpoint, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': `Bearer ${apiKey}`,\n                        },\n                        body: JSON.stringify(requestBody),\n                    });\n                    if (!response.ok) {\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    }\n                    const data = yield response.json();\n                    resolve({\n                        content: data.choices[0].message.content,\n                        inputTokens: data.usage.prompt_tokens,\n                        outputTokens: data.usage.completion_tokens\n                    });\n                }\n                catch (error) {\n                    console.error('Error calling LLM:', error);\n                    reject(new Error('An error occurred while analysing the content.'));\n                }\n            }));\n        });\n    });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { saveApiKey, getApiKey, hideElement, showElement, getDomainNameFromUrl, analyseWithLLM } from '../utils/utils';\ndocument.addEventListener('DOMContentLoaded', () => {\n    const popup = document.getElementById('news-analyser-popup');\n    // Initialize event listeners\n    initializeEventListeners();\n    // Prefill the API key if available and show relevant section\n    getApiKey((apiKey) => {\n        const apiKeyInput = popup.querySelector('#apiKeyInput');\n        if (apiKey) {\n            apiKeyInput.value = apiKey;\n        }\n        showRelevantSection();\n    });\n    function initializeEventListeners() {\n        popup.querySelector('#saveApiKeyButton').addEventListener('click', saveApiKeyHandler);\n        popup.querySelector('#resetApiKeyButton').addEventListener('click', resetApiKeyHandler);\n        popup.querySelector('#analyseButton').addEventListener('click', analyseButtonHandler);\n    }\n    function saveApiKeyHandler() {\n        const apiKeyInput = popup.querySelector('#apiKeyInput');\n        const apiKey = apiKeyInput.value.trim();\n        const messageDiv = popup.querySelector('#message');\n        if (apiKey) {\n            saveApiKey(apiKey);\n            messageDiv.textContent = 'API key saved successfully!';\n            updateUIForAnalysis();\n        }\n        else {\n            messageDiv.textContent = 'Please enter a valid API key.';\n        }\n    }\n    function resetApiKeyHandler() {\n        chrome.storage.local.remove('chatgptApiKey', () => {\n            updateUIForApiKeyInput();\n            popup.querySelector('#message').textContent = 'API key has been reset. Please enter a new API key.';\n        });\n    }\n    function analyseButtonHandler() {\n        const articlesContentDiv = popup.querySelector('#articlesContent');\n        hideElement('#articlesContent');\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n            var _a;\n            const url = (_a = tabs[0].url) !== null && _a !== void 0 ? _a : \"\";\n            const selector = getSelectorByDomain(url);\n            if (!selector) {\n                showElement('#articlesContent');\n                articlesContentDiv.innerHTML = `<div>This website or subdomain is not supported.</div>`;\n            }\n            else {\n                showElement('#loading');\n                chrome.tabs.sendMessage(tabs[0].id, { action: 'extractArticleContent', selector }, (response) => {\n                    if (response && response.content) {\n                        analyseWithLLM(response.content).then((result) => {\n                            hideElement('#loading');\n                            showElement('#articlesContent');\n                            if (result && result.content) {\n                                fillResultsTable(result);\n                            }\n                            else {\n                                articlesContentDiv.innerHTML = `<div>The response retrieved was empty</div>`;\n                            }\n                        }).catch((error) => {\n                            console.error('Error in analyseWithLLM:', error);\n                            hideElement('#loading');\n                            showElement('#articlesContent');\n                            articlesContentDiv.innerHTML = `<div>Something went wrong: ${error.message}</div>`;\n                        });\n                    }\n                    else {\n                        hideElement('#loading');\n                        showElement('#articlesContent');\n                        articlesContentDiv.innerHTML = `<div>Failed to extract article content</div>`;\n                    }\n                });\n            }\n        });\n    }\n    function showRelevantSection() {\n        getApiKey((apiKey) => {\n            if (apiKey) {\n                updateUIForAnalysis();\n            }\n            else {\n                updateUIForApiKeyInput();\n            }\n        });\n    }\n    function updateUIForAnalysis() {\n        hideElement('#apiKeySection');\n        showElement('#analysisSection');\n    }\n    function updateUIForApiKeyInput() {\n        showElement('#apiKeySection');\n        hideElement('#analysisSection');\n    }\n    function fillResultsTable(data) {\n        const resultsTable = document.createElement('table');\n        resultsTable.id = 'daResultsTable';\n        resultsTable.innerHTML = `\n            <thead>\n                <tr>\n                    <th>Feature</th>\n                    <th>Assessment</th>\n                </tr>\n            </thead>\n            <tbody></tbody>\n        `;\n        popup.querySelector('#articlesContent').appendChild(resultsTable);\n        const resultsTableTBody = resultsTable.getElementsByTagName('tbody')[0];\n        resultsTableTBody.innerHTML = ''; // Clear existing rows\n        const features = [\n            'Use and presence of emotions',\n            'Ideological bias',\n            'Informal words and language',\n            'Facts go against scientific consensus',\n            'Misuse of experts'\n        ];\n        const svgIcons = {\n            'not present': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#238823\" class=\"bi bi-circle-fill\"><circle cx=\"8\" cy=\"8\" r=\"8\"/></svg>',\n            'somewhat present': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#FFBF00\" class=\"bi bi-circle-fill\"><circle cx=\"8\" cy=\"8\" r=\"8\"/></svg>',\n            'strongly present': '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#D2222D\" class=\"bi bi-circle-fill\"><circle cx=\"8\" cy=\"8\" r=\"8\"/></svg>'\n        };\n        features.forEach(feature => {\n            const row = document.createElement('tr');\n            const featureCell = document.createElement('td');\n            const assessmentCell = document.createElement('td');\n            featureCell.textContent = feature;\n            const parsedData = JSON.parse(data.content);\n            const assessment = parsedData[feature];\n            const assessmentKey = assessment.toLowerCase();\n            assessmentCell.innerHTML = `${svgIcons[assessmentKey]} ${assessment}`;\n            row.appendChild(featureCell);\n            row.appendChild(assessmentCell);\n            resultsTableTBody.appendChild(row);\n        });\n        const cost = data.outputTokens * 0.0000006 + data.inputTokens * 0.00000015;\n        const usageLine = `<p class='usage'>Estimated cost: $${cost.toFixed(4)}</p>`;\n        popup.querySelector('#articlesContent').insertAdjacentHTML('beforeend', usageLine);\n    }\n    function getSelectorByDomain(url) {\n        const parsedUrl = new URL(url);\n        const domain = getDomainNameFromUrl(parsedUrl);\n        return getSelector(domain);\n    }\n    function getSelector(key) {\n        const selectors = {\n            ad: 'article.article',\n            apnews: 'bsp-story-page',\n            axed: '#article-blocks',\n            bbc: 'article',\n            cnn: 'article',\n            fd: 'div.grid',\n            foxnews: 'article',\n            frontnieuws: 'article',\n            geenstijl: 'main',\n            gedachtenvoer: 'article',\n            gelderlander: 'article.article',\n            jensen: 'article',\n            nbu: 'article.content',\n            niburu: 'div.com-content-article',\n            nieuwnieuws: 'div.app-container.article',\n            ninefornews: '#the-post',\n            nos: '#content',\n            nrc: 'article.vorm_article',\n            nu: '.blocks-container-article',\n            oann: 'article',\n            parool: 'article#article-content',\n            telegraaf: '#mainContent',\n            transitieweb: 'article',\n            trouw: 'article',\n            volkskrant: 'article'\n        };\n        return selectors[key];\n    }\n});\n"],"names":[],"sourceRoot":""}